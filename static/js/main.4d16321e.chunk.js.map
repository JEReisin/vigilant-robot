{"version":3,"sources":["RandomQuotes.js","App.js","reportWebVitals.js","index.js"],"names":["RandomQuotes","_useState","useState","quote","author","quotes","_slicedToArray","_useState3","_useState4","randomNumber","setNewRandomNumber","linkToTwitter","linkToTumblr","React","createElement","id","style","background","width","minHeight","display","justifyContent","alignItems","flexDirection","position","fontFamily","margin","marginBottom","marginTop","paddingLeft","paddingRight","color","className","onClick","Math","round","random","length","console","log","left","bottom","href","target","rel","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yPA+EeA,SA5EM,WAAM,IAAAC,EACNC,mBACb,CACI,CACIC,MAAO,sGACPC,OAAQ,cAEZ,CACID,MAAO,0BACPC,OAAQ,eAEZ,CACID,MAAO,8DACPC,OAAQ,YAEZ,CACID,MAAO,iKACPC,OAAQ,aAEZ,CACID,MAAO,gKACPC,OAAQ,WApBbC,EAsBNC,YAAAL,EAAA,GAtBY,GAAAM,EAuB8BL,mBAAS,GAAEM,EAAAF,YAAAC,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAkBF,EAAA,GAsCnCG,EAAgB,0CAA6CN,EAAOI,GAAcN,MAAQ,MAASE,EAAOI,GAAcL,OACxHQ,EAAe,6FAA+FP,EAAOI,GAAcN,MAAQ,uFAC/I,OACIU,IAAAC,cAAA,OAAKC,GAAG,YAAYC,MAlCJ,CAChBC,WAAY,2CACZC,MAAO,IACPC,UAAW,IACXC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,cAAe,SACfC,SAAU,WA2BNX,IAAAC,cAAA,KAAGC,GAAG,OAAOC,MAxBF,CACfE,MAAO,OACPO,WAAY,cACZC,OAAQ,OACRC,aAAc,EACdC,UAAW,GACXC,YAAa,MACbC,aAAc,MACdC,MAAO,YAgB6B,IAAE1B,EAAOI,GAAcN,MAAM,KAC7DU,IAAAC,cAAA,MAAIC,GAAG,SAASiB,UAAU,UAAS,IAAE3B,EAAOI,GAAcL,QAC1DS,IAAAC,cAAA,UAAQC,GAAG,YAAYiB,UAAU,yBAAyBC,QA1C9C,WAChBvB,EAAmBwB,KAAKC,MAAMD,KAAKE,UAAY/B,EAAOgC,OAAS,KAC/DC,QAAQC,IAAI9B,KAwCwE,kBAChFI,IAAAC,cAAA,OAAKC,GAAG,kBAAkBC,MAhBN,CACxBI,QAAS,OACTI,SAAU,WACVgB,KAAM,GACNC,OAAQ,EACRvB,MAAO,MACPG,eAAgB,kBAWRR,IAAAC,cAAA,KAAGC,GAAG,cAAc2B,KAAM/B,EAAegC,OAAO,SAASC,IAAI,uBAAsB/B,IAAAC,cAAA,KAAGkB,UAAU,oBAChGnB,IAAAC,cAAA,KAAGC,GAAG,eAAe2B,KAAM9B,EAAc+B,OAAO,SAASC,IAAI,uBAAsB/B,IAAAC,cAAA,KAAGkB,UAAU,uBC5DjGa,MAVf,WACE,OACEhC,IAAAC,cAAA,OAAKkB,UAAU,OACbnB,IAAAC,cAAA,QAAMkB,UAAU,cACdnB,IAAAC,cAACd,EAAY,SCIN8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAAC+B,EAAG,QAORC","file":"static/js/main.4d16321e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './RandomQuotes.css';\r\n\r\nconst RandomQuotes = () => {\r\n    const [quotes] = useState(\r\n        [\r\n            {\r\n                quote: \"Thenceforth they thought that, rationally concluded, doubt could become an instrument of knowledge.\",\r\n                author: \"Marc Bloch\"\r\n            },\r\n            {\r\n                quote: \"Luke, I am your father.\",\r\n                author: \"Darth Vader\"\r\n            },\r\n            {\r\n                quote: \"You only live once, but if you do it right, once is enough.\",\r\n                author: \"Mae West\"\r\n            },\r\n            {\r\n                quote: \"The primary task of a useful teacher is to teach his students to recognize 'inconvenient' facts - I mean facts that are inconvenient for their party opinions.\",\r\n                author: \"Max Weber\"\r\n            },\r\n            {\r\n                quote: \"If money comes into the world with a congenital blood-stain on one cheek, then capital comes dripping from head to toe, from every pore, with blood and dirt.\",\r\n                author: \"Goofy\"\r\n            }]\r\n    );\r\n    const [randomNumber, setNewRandomNumber] = useState(0);\r\n\r\n    const changeQuote = () => {\r\n        setNewRandomNumber(Math.round(Math.random() * (quotes.length - 1)));\r\n        console.log(randomNumber);\r\n    }\r\n\r\n    const squareStyle = {\r\n        background: 'linear-gradient(45deg, #544d48, #544a48)',\r\n        width: 500,\r\n        minHeight: 170,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        position: 'sticky'\r\n    }\r\n\r\n    const quoteStyle = {\r\n        width: '100%',\r\n        fontFamily: 'sans-seriff',\r\n        margin: 'auto',\r\n        marginBottom: 0,\r\n        marginTop: 10,\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        color: '#7e7158',\r\n    };\r\n\r\n    const socialNetworksStyle = {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        left: 10,\r\n        bottom: 0,\r\n        width: '15%',\r\n        justifyContent: 'space-between'\r\n    };\r\n    \r\n    let linkToTwitter = \"https://twitter.com/intent/tweet?text=\\\"\" + quotes[randomNumber].quote + \"\\\" -\" + quotes[randomNumber].author;\r\n    let linkToTumblr = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&content=\" + quotes[randomNumber].quote + \"&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button\";\r\n    return (\r\n        <div id=\"quote-box\" style={squareStyle}>\r\n            <p id=\"text\" style={quoteStyle}>\"{quotes[randomNumber].quote}\"</p>\r\n            <em id=\"author\" className=\"author\">-{quotes[randomNumber].author}</em>\r\n            <button id=\"new-quote\" className=\"btn btn-success btn-lg\" onClick={changeQuote}>Get inspired!!</button>\r\n            <div id=\"social-networks\" style={socialNetworksStyle}>\r\n                <a id=\"tweet-quote\" href={linkToTwitter} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter\"></i></a>\r\n                <a id=\"tumblr-quote\" href={linkToTumblr} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-tumblr\"></i></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RandomQuotes;","import './App.css';\nimport RandomQuotes from './RandomQuotes.js';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"App-header\">\n        <RandomQuotes />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}